@import "src/styles/functions.scss";

.button {
  transition: time(transition-hover);
  border-radius: space(radius);
  padding: space(pd-y) space(pd-x);
  display: flex;
  flex-flow: row;
  align-items: center;
  justify-content: center;
  font-weight: 600;

  &[data-size="small"] {
    max-height: space(height-small);
    min-height: space(height-small);
  }

  &[data-size="normal"] {
    max-height: space(height-normal);
    min-height: space(height-normal);
  }

  &[data-size="big"] {
    max-height: space(height-big);
    min-height: space(height-big);
  }

  &:disabled {
    background-color: colorFromRgb(disabled-btn);
    border: none;
    color: colorFromRgb(light-text);

    &:hover {
      cursor: unset;
    }

    transition: time(default);

    &[data-variant="text"] {
      background-color: transparent !important;
      color: colorFromRgb(gray-text);
    }
  }

  &:enabled {
    &[data-variant="transparent"] {
      background-color: color(gray-very-light);
      border: 1px solid transparent;
      color: color(gray-main);

      & > .icon[data-variant="bold"] > path {
        fill: color(gray-main);
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: color(gray-main);
        transition: time(transition-hover);
      }

      &:hover {
        border-color: color(gray-light);
      }
    }

    &[data-variant="outlined"][data-color="primary"] {
      color: rgb(color(primary-btn));
      border: 1px solid rgb(color(primary-btn));
      background-color: transparent;

      & > .icon[data-variant="bold"] > path {
        fill: rgb(color(primary-main));
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: rgb(color(primary-main));
        transition: time(transition-hover);
      }

      &:hover {
        background-color: rgb(color(primary-btn-hover));
        color: rgb(color(white));

        & > .icon[data-variant="bold"] > path {
          fill: color(primary-contrast-text);
        }

        & > .icon[data-variant="linear"] > path {
          stroke: color(primary-contrast-text);
        }
      }
    }

    &[data-variant="outlined"][data-color="secondary"] {
      border: 1px solid rgb(color(secondary-btn-hover));
      color: rgb(color(secondary-main));
      background-color: colorFromRgb(secondary-background);

      & > .icon[data-variant="bold"] > path {
        fill: rgb(color(secondary-main));
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: rgb(color(secondary-main));
        transition: time(transition-hover);
      }

      &:hover {
        background-color: rgb(color(primary-background));

        :root [data-theme="dark"] & {
          background-color: color(gray-main);
        }

        & > .icon[data-variant="bold"] > path {
          fill: colorFromRgb(secondary-main);
        }

        & > .icon[data-variant="linear"] > path {
          stroke: color(secondary-contrast-text);
        }
      }
    }

    &[data-variant="outlined_no_hover"][data-color="warning"] {
      border: 1px solid rgb(color(warning));
      color: rgb(color(warning));

      & > .icon[data-variant="bold"] > path {
        fill: rgb(color(warning));
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: rgb(color(warning));
        transition: time(transition-hover);
      }
      cursor: default;

      &:hover {
        border: 1px solid rgb(color(warning));
        background: transparent;

        :root [data-theme="dark"] & {
          border: color(warning);
        }

        & > .icon[data-variant="bold"] > path {
          fill: colorFromRgb(warning);
        }

        & > .icon[data-variant="linear"] > path {
          stroke: color(warning);
        }
      }
    }

    &[data-variant="outlined_no_hover"][data-color="secondary"] {
      border: 1px solid rgb(color(secondary-btn-hover));
      color: rgb(color(secondary-main));
      background-color: colorFromRgb(secondary-background);

      & > .icon[data-variant="bold"] > path {
        fill: rgb(color(secondary-main));
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: rgb(color(secondary-main));
        transition: time(transition-hover);
      }
      cursor: default;

      &:hover {
        background-color: transparent;

        :root [data-theme="dark"] & {
          background-color: color(gray-main);
        }

        & > .icon[data-variant="bold"] > path {
          fill: colorFromRgb(secondary-main);
        }

        & > .icon[data-variant="linear"] > path {
          stroke: color(secondary-contrast-text);
        }
      }
    }

    &[data-variant="text"] {
      background-color: transparent;
      border: 1px solid transparent;
      color: rgb(color(primary-main));
      text-decoration: underline;

      & > .icon[data-variant="bold"] > path {
        fill: rgb(color(primary-main));
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: rgb(color(primary-main));
        transition: time(transition-hover);
      }

      &:hover {
        color: rgb(color(secondary-main));

        & > .icon[data-variant="bold"] > path {
          fill: rgb(color(secondary-main));
        }

        & > .icon[data-variant="linear"] > path {
          stroke: rgb(color(secondary-main));
        }
      }
    }

    &[data-variant="contained"] {
      background-color: rgb(color(primary-btn));
      border: none;
      color: rgb(color(white));

      & > .icon[data-variant="bold"] > path {
        fill: color(primary-contrast-text);
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: color(secondary-contrast-text);
        transition: time(transition-hover);
      }

      &:hover {
        background-color: rgb(color(primary-btn-hover));
        color: color(secondary-contrast-text);

        :root [data-theme="dark"] & {
          background-color: color(primary-light);
        }

        & > .icon[data-variant="bold"] > path {
          fill: color(primary-contrast-text);
        }

        & > .icon[data-variant="linear"] > path {
          stroke: color(secondary-contrast-text);
        }
      }
    }

    &[data-color="success"] {
      background-color: colorFromRgb(success);
      border: 1px solid colorFromRgb(success);
      color: color(success-contrast-text);

      & > .icon[data-variant="bold"] > path {
        fill: color(success-contrast-text);
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: color(success-contrast-text);
        transition: time(transition-hover);
      }

      &:hover {
        background-color: rgba(color(success), 0.8);
        transition: time(transition-hover);
      }
    }

    &[data-color="error"] {
      background-color: transparent;
      border: 1px solid rgb(color(danger));
      color: rgb(color(danger));

      & > .icon[data-variant="bold"] > path {
        fill: rgb(color(danger));
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: rgb(color(danger));
        transition: time(transition-hover);
      }

      &:hover {
        background-color: colorFromRgba(danger, 80);
        transition: time(transition-hover);

        & > .icon[data-variant="bold"] > path {
          fill: color(error-contrast-text);
          transition: time(transition-hover);
        }

        & > .icon[data-variant="linear"] > path {
          stroke: color(error-contrast-text);
          transition: time(transition-hover);
        }
      }
    }

    &[data-variant="contained"][data-color="error"] {
      background-color: colorFromRgb(danger);
      border: 1px solid colorFromRgb(danger);
      color: color(success-contrast-text);
      &:hover {
        background-color: colorFromRgba(danger, 80);
        transition: time(transition-hover);
      }
      & > .icon[data-variant="bold"] > path {
        fill: color(success-contrast-text);
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: color(success-contrast-text);
        transition: time(transition-hover);
      }
    }

    &[data-variant="contained"][data-color="warning"] {
      background-color: colorFromRgb(warning);
      border: 1px solid colorFromRgb(warning);
      color: color(success-contrast-text);
      &:hover {
        background-color: colorFromRgba(warning, 80);
        transition: time(transition-hover);
      }
      & > .icon[data-variant="bold"] > path {
        fill: color(success-contrast-text);
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: color(success-contrast-text);
        transition: time(transition-hover);
      }
    }

    &[data-variant="error-contained"] {
      background-color: colorFromRgb(danger);
      color: rgb(color(white));

      & > .icon[data-variant="bold"] > path {
        fill: rgb(color(white));
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: rgb(color(white));
        transition: time(transition-hover);
      }

      &:hover {
        background-color: rgba(color(danger), 0.8);
        transition: time(transition-hover);

        & > .icon[data-variant="bold"] > path {
          fill: rgb(color(white));
          transition: time(transition-hover);
        }

        & > .icon[data-variant="linear"] > path {
          stroke: rgb(color(white));
          transition: time(transition-hover);
        }
      }
    }

    &[data-color="warning"] {
      background-color: transparent;
      border: 1px solid rgb(color(warning));
      color: rgb(color(warning));

      & > .icon[data-variant="bold"] > path {
        fill: rgb(color(warning));
        transition: time(transition-hover);
      }

      & > .icon[data-variant="linear"] > path {
        stroke: rgb(color(warning));
        transition: time(transition-hover);
      }

      &:hover {
        background-color: rgba(color(warning), 0.8);
        transition: time(transition-hover);

        & > .icon[data-variant="bold"] > path {
          fill: color(warning-contrast-text);
          transition: time(transition-hover);
        }

        & > .icon[data-variant="linear"] > path {
          stroke: color(warning-contrast-text);
          transition: time(transition-hover);
        }
      }
    }
  }

  &:hover {
    cursor: pointer;
    transition: time(transition-hover);

    .icon {
      transition: time(transition-hover);
    }
  }

  span,
  div,
  p {
    font-family: "Poppins";
    font-style: normal;
    font-weight: 500;
    font-size: 14px;
    line-height: 21px;
  }

  .icon {
    margin-right: 7px;
    transition: time(transition-hover);
  }
}
